# -*- coding: utf-8 -*-
"""Absence_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r4tyhSscE5XNrOhP28Y4Tk-7xVqExQyo
"""

"""This program can be only used for IR course in JUST University (2 sections) and lectures times are fixed
Students can attend the lecture in any section they want
the minimum time to be recorded as attendee is 50 minutes"""
import numpy as np
import pandas as pd

from google.colab import files #Upload the file that contains Registered students
uploaded =files.upload()

from google.colab import files #First section
uploaded =files.upload()

from google.colab import files #Second section
uploaded =files.upload()

df_name = pd.read_csv('RegisteredStudents.csv') #Students names from Elearning into dataframe
df_name

#rename the file in the read function 
df_file1 = pd.read_csv('meetingAttendanceList (2).csv', encoding='utf-16', sep = "\t") #changing the default encoding utf-8 (Error)
df_file2 = pd.read_csv('meetingAttendanceList (5).csv', encoding='utf-16', sep = "\t") 
df_att = pd.concat([df_file1, df_file2], ignore_index=True)
df_att

#remove dates in 'Timestamp'
for att_index, att_row in df_att.iterrows():
  remove_index = df_att.iloc[att_index,2].find(', ') #will use this index to remove the date
  df_att.iloc[att_index,2] = df_att.iloc[att_index,2][remove_index+1 : ]
df_att

#adding an empty dataframe
df_att = df_att.append(pd.Series(), ignore_index=True)
df_att

#determine the time in lecture for each student
sec3_starttime = pd.to_datetime(' 1:00:00 PM', format=' %I:%M:%S %p') #section 3 start time
sec1_starttime = pd.to_datetime(' 2:30:00 PM', format=' %I:%M:%S %p') #section 1 start time
sec1_endtime = pd.to_datetime(' 3:50:00 PM', format=' %I:%M:%S %p') #section 3 end time
sec3_endtime = pd.to_datetime(' 2:20:00 PM', format=' %I:%M:%S %p') #section 1 end time


for name_index, name_row in df_name.iterrows():
  
  for att_index, att_row in df_att.iterrows():
  
    if df_name.iloc[name_index, 0] == df_att.iloc[att_index, 0] and not df_att.iloc[-1,0] == np.nan: #checks if the name in 'RegisteredStudents' equals the name in 'meetingAttendance' file
      duration =0  
  
      if (df_att.iloc[att_index, 1] == 'Joined' or df_att.iloc[att_index, 1] =='Joined before') and df_att.iloc[att_index + 1, 1] == 'Left': #student have joined and left
        start = pd.to_datetime(df_att.iloc[att_index, 2], format=' %I:%M:%S %p')
        end = pd.to_datetime(df_att.iloc[att_index + 1,2], format=' %I:%M:%S %p')
        duration = end - start
        df_name.iloc[name_index, 1] += duration      
      
      elif (df_att.iloc[att_index, 1] == 'Joined' or df_att.iloc[att_index, 1] =='Joined before'):
        time = pd.to_datetime(df_att.iloc[att_index,2], format=' %I:%M:%S %p')
        if time > sec3_starttime and time < sec3_endtime or time < sec3_starttime :
          df_name.iloc[name_index, 1] += sec3_endtime - pd.to_datetime(df_att.iloc[att_index ,2],format=' %I:%M:%S %p')

        else:
          df_name.iloc[name_index, 1] += sec1_endtime - pd.to_datetime(df_att.iloc[att_index ,2],format=' %I:%M:%S %p')

df_name

#students who absent from the lecture 
df_absent = pd.DataFrame(columns=['Full Name', 'Duration in lec'])
min_time = pd.to_timedelta('0 days 00:50:00')
for name_index, name_row in df_name.iterrows():
  if pd.to_timedelta(df_name.iloc[name_index, 1]) < min_time:
    df_absent = df_absent.append(name_row, ignore_index=True)

df_absent

#df_absent.to_csv()
from google.colab import files
df_absent.to_csv ('df_absent.csv')
files.download('df_absent.csv')